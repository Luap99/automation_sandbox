---

# Ref: https://cirrus-ci.org/guide/writing-tasks/

# Global environment variables
env:
    # Name of the typical destination branch for PRs.
    DEST_BRANCH: "master"

# Default runtime environment
container:
    image: quay.io/libpod/cirrus-ci_retrospective:latest


# Actual testing task for code in this repo.
cirrus-ci/test_task:
    env:
        CIRRUS_CLONE_DEPTH: 0
    script:
        - git fetch --tags
        - $CIRRUS_WORKING_DIR/bin/run_all_tests.sh


# CI-Testing (itself) task that always passes + uploads simple artifact
cirrus-ci/test_passing_task:
    script:
        - echo "$CIRRUS_BUILD_ID/$CIRRUS_TASK_ID/pass" > passing_output.log
        - true
    always: &results
        test_artifacts:
            path: '*.log'


# Represent secondary Github Action based testing (Required for merge)
github-actions/success_task:
    # Note: ***DO NOT*** manually trigger this task under normal circumstances.
    #       It is triggered automatically by the cirrus-ci_retrospective
    #       Github Action.  This action is responsible for testing the PR changes
    #       to the action itself.
    trigger_type: manual
    # Only required for PRs, never tag or branch testing
    only_if: $CIRRUS_BRANCH != $DEST_BRANCH
    depends_on:
        - cirrus-ci/test
    script: >-
        echo "Related Github Action Workflow: https://github.com/${CIRRUS_REPO_FULL_NAME}/actions/runs/${GITHUB_CHECK_SUITE_ID}"


# CI-Testing (itself) task that always fails in PRs + uploads simple artifact
# cirrus-ci/test_failing_task:
#     script:
#         - echo "$CIRRUS_BUILD_ID/$CIRRUS_TASK_ID/fail" > failing_output.log
#         - test -z "$CIRRUS_PR"  # only fail when running on pull requests
#     always:
#         <<: *results


cirrus-ci/success_task:
    depends_on:
        - cirrus-ci/test
        - cirrus-ci/test_passing
        # - cirrus-ci/test_failing
