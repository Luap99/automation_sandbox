---

# Use the latest published version of the cirrus-ci_retrospective container
# to determine the execution context of _this_ workflow run.  If it is a
# pull request, clone the HEAD used in the Cirrus-CI build.  From the PR
# code, build a test version of the cirrus-ci_retrospective container,
# and run it against the originally-triggering Github Actions event.
# Collect and provide outputs in an archive file for analysis.

on:
    check_suite:  # ALWAYS triggered from the default branch
        # Ref: https://help.github.com/en/actions/reference/events-that-trigger-workflows#check-suite-event-check_suite
        types:
            - completed

jobs:
    cirrus-ci_retrospective:
        # Do not execute for other github applications, only works with cirrus-ci
        if: github.event.check_suite.app.name == 'Cirrus CI'
        runs-on: ubuntu-latest
        steps:
            - name: Execute latest upstream cirrus-ci_retrospective
              id: cirrus-ci_retrospective
              uses: docker://quay.io/libpod/cirrus-ci_retrospective:latest
              env:
                GITHUB_TOKEN: ${{ github.token }}

            - name: Check output for Cirrus-CI build versus Pull Request
              id: retro
              shell: bash
              run: |
                  prn=$(jq '.[] | select(.name == "cirrus-ci/test_success") | .build.pullRequest' ./cirrus-ci_retrospective.json)
                  sha=$(jq '.[] | select(.name == "cirrus-ci/test_success") | .build.changeIdInRepo' ./cirrus-ci_retrospective.json)
                  if [[ -n "$prn" ]] && [[ "$prn" != "null" ]] && [[ $prn -gt 0 ]] && [[ -n "$sha" ]]; then
                      printf "\n::set-output name=was_pr::true\n"
                      printf "\n::set-output name=prn::%d\n" "$prn"
                  else
                      printf "\n::set-output name=was_pr::false\n"
                      printf "\n::set-output name=prn::null\n"
                  fi
                  printf "\n::set-output name=sha::%s\n" "$sha"

            - if: always()
              name: Debug latest upstream cirrus-ci_retrospective output Values
              run: |
                  echo "Was PR: ${{ steps.retro.outputs.was_pr }}"
                  echo "PR Number: ${{ steps.retro.outputs.prn }}"
                  echo "SHA: ${{ steps.retro.outputs.sha }}"
                  echo "Analyzed Cirrus-CI task:"
                  jq --indent 4 '.[] | select(.name == "cirrus-ci/test_success")' ./cirrus-ci_retrospective.json

            # N/B: At the time of this comment, it is not possible to provide
            # direct links to specific job-steps (here) nor links to artifact
            # files.  There are open RFE's for this capability to be added.
            - if: steps.retro.outputs.was_pr == 'true'
              id: create_pr_comment
              name: Create a status comment in the PR
              # Ref: https://github.com/marketplace/actions/comment-action
              uses: jungwinter/comment@v1
              with:
                  issue_number: '${{ steps.retro.outputs.prn }}'
                  type: 'create'
                  token: '${{ secrets.GITHUB_TOKEN }}'
                  body: >-
                      [Cirrus-CI Retrospective Github
                      Action](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
                      has started.  Running against ${{ steps.retro.outputs.sha }} in this pull request.

            - if: steps.retro.outputs.was_pr == 'true'
              name: Clone all repository code
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  path: ./pull_request
                  # ignored for some inexplicable reason
                  # ref: ${{ steps.retro.outputs.sha }}

            - if: steps.retro.outputs.was_pr == 'true'
              name: Fetch PR code used by Cirrus-CI during completed build
              run: |
                  mkdir -p test_artifacts
                  cp "$GITHUB_EVENT_PATH" test_artifacts/
                  mkdir -p pull_request
                  cd pull_request
                  git fetch origin "${{ steps.retro.outputs.sha }}"
                  git checkout -b 'pr${{ steps.retro.outputs.prn }}' FETCH_HEAD
                  git log -1 | tee ../test_artifacts/commit.txt

            - if: steps.retro.outputs.was_pr == 'true'
              id: edit_pr_comment_build
              name: Update status comment on PR
              uses: jungwinter/comment@v1
              with:
                  type: 'edit'
                  comment_id: '${{ steps.create_pr_comment.outputs.id }}'
                  token: '${{ secrets.GITHUB_TOKEN }}'
                  body: >-
                      [Cirrus-CI Retrospective Github
                      Action](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
                      is building [test container
                      Dockerfile](https://github.com/${{ github.repository}}/blob/${{steps.retro.outputs.sha}}/cirrus-ci_retrospective/Dockerfile) from this PR.

            - if: steps.retro.outputs.was_pr == 'true'
              name: Build cirrus-ci_retrospective container image from PR code
              run: |
                  cd pull_request
                  docker build -t test_container \
                        -f cirrus-ci_retrospective/Dockerfile \
                        --build-arg INSTALL_AUTOMATION_VERSION=0.0.0 \
                        ./ &> ../test_artifacts/build_output.txt
              #  TODO: Not sure if this is helpful to have or a burden to download-
              #  docker save test_container | gzip > ../test_artifacts/test_container.tar.gz

            - if: steps.retro.outputs.was_pr == 'true'
              id: edit_pr_comment_exec
              name: Update status comment on PR again
              uses: jungwinter/comment@v1
              with:
                  type: 'edit'
                  comment_id: '${{ steps.edit_pr_comment_build.outputs.id }}'
                  token: '${{ secrets.GITHUB_TOKEN }}'
                  body: >-
                      [Cirrus-CI Retrospective Github
                      Action](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
                      is executing test container.  Built from ${{ steps.retro.outputs.sha }} in this pull
                      request.

            - if: steps.retro.outputs.was_pr == 'true'
              name: Execute PR's cirrus-ci_retrospective container image
              run: |
                  cd pull_request
                  github_event_dirpath=$(dirname "${{ github.event_path }}")
                  /usr/bin/docker run --rm \
                      -e GITHUB_TOKEN=${{ github.token }} \
                      -e GITHUB_EVENT_PATH=/github/workflow/event.json \
                      -e GITHUB_ACTIONS=true \
                      -e GITHUB_WORKSPACE=/github/workspace \
                      -v "$PWD":"/github/workspace" \
                      -v $github_event_dirpath:/github/workflow \
                      --entrypoint=/bin/bash test_container \
                      -c "source /etc/profile && exec /usr/share/automation/bin/debug.sh" \
                      &> ../test_artifacts/debug_output.txt
                  mv ./cirrus-ci_retrospective.json ../test_artifacts/ || true

            - if: always() && steps.retro.outputs.was_pr == 'true'
              name: Archive event, build, and debugging output
              uses: actions/upload-artifact@v1.0.0
              with:
                  name: pr_${{ steps.retro.outputs.prn }}_test_artifacts_${{ steps.retro.outputs.sha }}.zip
                  path: ./test_artifacts

            - if: steps.retro.outputs.was_pr == 'true'
              name: Final status comment on PR
              uses: jungwinter/comment@v1
              with:
                  type: 'edit'
                  comment_id: '${{ steps.edit_pr_comment_exec.outputs.id }}'
                  token: '${{ secrets.GITHUB_TOKEN }}'
                  body: >-
                      Cirrus-CI Retrospective Github Action has finished running
                      from pull request at ${{ steps.retro.outputs.sha }}.  [Results
                      and artifacts are now available.]
                      (https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})

            - if: cancelled() && steps.retro.outputs.was_pr == 'true'
              # This can happen on --force push to PR or manual button press
              name: Add comment on workflow cancle
              uses: jungwinter/comment@v1
              with:
                  type: 'edit'
                  comment_id: '${{ steps.create_pr_comment.outputs.id }}'
                  token: '${{ secrets.GITHUB_TOKEN }}'
                  body: >-
                      [Cirrus-CI Retrospective Github
                      Action](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
                      was canceled against ${{ steps.retro.outputs.sha }} in this pull request.

            - if: failure() && steps.retro.outputs.was_pr == 'true'
              name: Add comment on workflow failure
              uses: jungwinter/comment@v1
              with:
                  type: 'edit'
                  comment_id: '${{ steps.create_pr_comment.outputs.id }}'
                  token: '${{ secrets.GITHUB_TOKEN }}'
                  body: >-
                      [Cirrus-CI Retrospective Github
                      Action](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
                      failed against ${{ steps.retro.outputs.sha }} in this pull request.

    debug:
        # Avoid useless executions
        if: github.event.check_suite.app.name == 'Cirrus CI'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/upload-artifact@v1.0.0
              name: Archive triggering event JSON
              with:
                  # There is no way to avoid this being zipped :(
                  name: event.json.zip
                  path: ${{ github.event_path }}
