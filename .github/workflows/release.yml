---

on:
  push:
      # ref: https://help.github.com/en/actions/reference/events-that-trigger-workflows#example-using-multiple-events-with-activity-types-or-configuration
      tags:
          - 'v*'

jobs:
    release:
        if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '.')
        runs-on: ubuntu-latest
        steps:
            # There is no other source or method to parse the tag from github.ref or event JSON :S
            - id: get_tag
              shell: bash
              run: printf "::set-output name=TAG_NAME::%s" $(basename $GITHUB_REF)
            - id: create_release  # Referenced by upload-release-asset below
              uses: actions/create-release@v1.0.1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: ${{ steps.get_tag.outputs.TAG_NAME }}
                release_name: ${{ steps.get_tag.outputs.TAG_NAME }}
            - uses: actions/checkout@v2
              with:
                  path: ./
            - uses: actions/upload-release-asset@v1.0.2
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./bin/install_automation.sh
                  asset_name: install_automation.sh
                  asset_content_type: application/octet-stream
    container_image:
        runs-on: ubuntu-latest
        env:
            REGISTRY: quay.io
            REPO_USER: libpod
            REPO_NAME: cirrus-ci_retrospective
        steps:
            - uses: actions/checkout@v2
              with:
                  path: ./
            - run: >-
                docker build -t $REGISTRY/$REPO_USER/$REPO_NAME:latest \
                    -f cirrus-ci_retrospective/Dockerfile \
                    --build-arg INSTALL_AUTOMATION_VERSION=0.0.0 \
                    ./
            - shell: bash
              env:
                  DOCKER_CONFIG_JSON: ${{secrets.DOCKER_CONFIG_JSON}}
              run: |
                  trap "history -c" EXIT
                  mkdir -p $HOME/.docker
                  echo "$DOCKER_CONFIG_JSON" > $HOME/.docker/config.json
            - id: get_tag
              shell: bash
              run: printf "::set-output name=TAG_NAME::%s" $(basename $GITHUB_REF)
            - run: |
                  docker tag $REGISTRY/$REPO_USER/$REPO_NAME:latest \
                             $REGISTRY/$REPO_USER/$REPO_NAME:${{ steps.get_tag.outputs.TAG_NAME }}
                  docker push $REGISTRY/$REPO_USER/$REPO_NAME:${{ steps.get_tag.outputs.TAG_NAME }} && \
                  docker push $REGISTRY/$REPO_USER/$REPO_NAME:latest
    debug:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/upload-artifact@v1.0.0
              with:
                  # There is no way to avoid this being zipped :(
                  name: event.json.zip
                  path: ${{ github.event_path }}
